/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Access control list.
 */
rule EverybodyCanReadEverything {
    description: "Allow all participants read access to all resources"
    participant: "cn.edu.scnu.lost.SchoolParticipant"
    operation: READ
    resource: "cn.edu.scnu.lost.*"
    action: ALLOW
}

rule EverybodyCanUpdate {
    description: "Allow all participants to submit new transactions"
    participant(p): "cn.edu.scnu.lost.SchoolParticipant"
    operation: UPDATE
    resource(r): "cn.edu.scnu.lost.GoodsAsset"
    transaction(tx): "cn.edu.scnu.lost.**"
    condition: (r.state !== 'RETURNED')
    action: ALLOW
}

rule CreateLostTransactionCanCreate {
    description: "Allow all participants to submit new transactions"
    participant(p): "cn.edu.scnu.lost.SchoolParticipant"
    operation: CREATE
    resource(r): "cn.edu.scnu.lost.GoodsAsset"
    transaction(tx): "cn.edu.scnu.lost.CreateLostTransaction"
    condition: (true)
    action: ALLOW
}

rule EverybodyCanSubmitTransactions {
    description: "Allow all participants to submit new transactions"
    participant(p): "cn.edu.scnu.lost.SchoolParticipant"
    operation: CREATE
    resource(r): "cn.edu.scnu.lost.CreateLostTransaction"
    condition: (true)
    action: ALLOW
}

rule PickerCanDeclareFoundTransaction {
    description: "Only picker can declare goods is FOUND when goods is in LOST state"
    participant(p): "cn.edu.scnu.lost.SchoolParticipant"
    operation: CREATE
    resource(r): "cn.edu.scnu.lost.PickTransaction"
    condition: (true)
    action: ALLOW
}

rule OwnerCanDoCancelTransaction {
    description: "Only owner can cancel when goods is in LOST state"
    participant(p): "cn.edu.scnu.lost.SchoolParticipant"
    operation: CREATE
    resource(r): "cn.edu.scnu.lost.CancelTransaction"
    condition: (r.asset.owner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule PickerRevertTransaction {
    description: "Only picker can revert goods when goods is in FOUND state"
    participant(p): "cn.edu.scnu.lost.SchoolParticipant"
    operation: CREATE
    resource(r): "cn.edu.scnu.lost.RevertTransaction"
    condition: (r.asset.picker.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule OwnerCanReturnedTransaction {
    description: "Only picker can revert goods when goods is in REVERTED state"
    participant(p): "cn.edu.scnu.lost.SchoolParticipant"
    operation: CREATE
    resource(r): "cn.edu.scnu.lost.ReturnBackTransaction"
    condition: (r.asset.owner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule SystemACL {
    description: "System ACL to permit all access"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}